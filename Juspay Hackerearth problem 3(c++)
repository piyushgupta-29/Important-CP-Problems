// Question:
// JS newbie "A" wants to learn React from "B" and wants 
// to kow in his network who can introduce him to B in 
// the shortest time period.

//Input:
// 4
// 2
// 5
// 7
// 9
// 4
// 2 9 2
// 7 2 3
// 7 9 7
// 9 5 1
// 7
// 9

//Output:
//5

#include<bits/stdc++.h>
using namespace std;

#define boost ios_base::sync_with_stdio(false);cin.tie(NULL);
#define endl "\n"
#define ll long long int
#define mod 1000000007
#define vll vector<ll>
#define vvll vector<vll>
#define pb push_back
#define mll map<ll,ll>
#define pll pair<ll,ll>
#define N 1000005

int main()
{
    boost
    ll t,n,i,x,y,j,k,m,mn,mx,cnt,sum,ans,src,dest;
    mn=INT_MAX;
    cin>>n;
    vll arr(n);
    for(i=0; i<n; i++) cin>>arr[i];
    mll mp;
    for(i=0; i<n; i++)
        mp[arr[i]]=i;
    cin>>m;
    vector<vector<pll>> a(n+1);
    vll dp(n+1,mn);
    vll vis(n+1);
    for(i=0; i<m; i++)
    {
        ll u,v,w;
        cin>>u>>v>>w;
        a[mp[u]].pb({mp[v],w});
        a[mp[v]].pb({mp[u],w});
    }
    cin>>src>>dest;
    priority_queue<pll,vector<pll>,greater<pll>> pq;
    dp[mp[src]]=0;
    pq.push({mp[src],1});
    while(!pq.empty())
    {
        x=pq.top().second;
        pq.pop();
        if(vis[x])
            continue;
        vis[x]=1;
        for(auto it:a[x])
        {
            if(dp[x]+it.second<dp[it.first])
            {
                dp[it.first]=dp[x]+it.second;
                pq.push({dp[it.first],it.first});
            }
        }
    }
    if(dp[mp[dest]]==INT_MAX) 
         cout<<-1<<endl;
    else 
         cout<<dp[mp[dest]]<<endl;
}



    
