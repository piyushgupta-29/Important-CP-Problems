// Question:
// JS newbie "A" wants to check if he can reach out 
// to a React expert "B" using his network of React Developers.
// If he can then return 1 else return 0.

// Input:
// 4
// 2
// 5
// 7
// 9
// 4
// 2 9 
// 7 2 
// 7 9 
// 9 5 
// 7
// 9

// Output:
// 1

//problem started at:  paused at:  resumed at:
#include<bits/stdc++.h>
using namespace std;
 
#define boost ios_base::sync_with_stdio(false);cin.tie(NULL)
#define endl "\n"
#define ll long long int
#define mod 1000000007
#define vll vector<ll>
#define vvll vector<vll>
#define pb push_back
#define mll map<ll,ll>
#define pll pair<ll,ll>
#define N 1000005


// dsu
ll getparent(ll a,vll &parent)
{
    return parent[a]=(parent[a]==a?a:getparent(parent[a],parent));
}
bool getunion(ll a,ll b,vll &parent,vll &size)
{
    a=getparent(a,parent);
    b=getparent(b,parent);
    if(a==b) return false;
    if(size[b]>size[a])
    {
        parent[a]=b;
        size[b]+=size[a];
    }
    else
    {
        parent[b]=a;
        size[a]+=size[b];
    }
    return true;
}

int main()
{
    boost;
    ll t,n,i,x,y,j,k,m,p,q,mn,mx,cnt,sum,ans;
    sum=0;cnt=0;ans=0;mn=1e18;mx=INT_MIN;
    cin>>n;
    vector<ll> a(n),parent(n),size(n,0);
    map<int,int> mp;
    for(i=0;i<n;i++) parent[i]=i;
    for(i=0;i<n;i++)
    {
        cin>>a[i];
        mp[a[i]]=i;
    }
    cin>>m;
    for(i=0;i<m;i++)
    {
        ll u,v;
        cin>>u>>v;
        getunion(mp[u],mp[v],parent,size);
    }
    ll src,dest;
    cin>>src>>dest;
    if(getparent(mp[src],parent)==getparent(mp[dest],parent)) cout<<1<<endl;
    else cout<<0<<endl;
}

